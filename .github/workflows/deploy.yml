name: Deploy Phoenix LiveView

on:
  push:
    branches: ["deploy"]

jobs:
  deploy:
    runs-on: ubuntu-22.04
    env:
      MIX_ENV: prod                   # Режим сборки - продакшн
      DEPLOY_PATH: /opt/llm_nicknames/releases        # Путь на сервере для деплоя
      SERVICE_NAME: llm_nicknames.service     # Имя systemd-сервиса
      LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
    steps:
      # 1. Сборка проекта
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir and OTP
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18.3' # [Required] Define the Elixir version
          otp-version: '27.3'      # [Required] Define the Erlang/OTP version

      - name: Install Elixir deps (prod)
        run: mix deps.get --only prod

      - name: Compile Elixir code
        run: mix compile

      - name: Build and digest assets
        run: mix assets.deploy

      - name: Build phoenix release
        run: mix phx.gen.release

      - name: Build release
        run: mix release --overwrite

      # 2. Подготовка SSH для деплоя
      - name: Setup SSH key and known hosts
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Add server to known_hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # --- Получаем версию из mix.exs ---
      - name: Extract version from mix.exs
        id: version
        run: echo "VERSION=$(mix run -e 'IO.puts(Mix.Project.config()[:version])')" >> $GITHUB_ENV
        env:
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # 3. Копирование релиза на сервер
      - name: Pack release for deploy
        run: tar -czf release.tar.gz -C _build/prod/rel/ life_complex
      - name: Upload release to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "release.tar.gz"
          target: "${{ env.DEPLOY_PATH }}/${{ env.VERSION }}"

      # 4. Развёртывание и запуск на сервере
      - name: Deploy and restart service
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |                        # Многострочный скрипт на удалённом сервере
            set -e                         # завершать при ошибках
            echo "Stopping old service (if running)"
            sudo systemctl stop ${{ env.SERVICE_NAME }} || true

            echo "Deploying new release to ${DEPLOY_PATH}"
            sudo rm -rf ${{ env.DEPLOY_PATH }}/*       # очистка старых файлов
            sudo tar -xzf ${{ env.DEPLOY_PATH }}/release.tar.gz -C ${{ env.DEPLOY_PATH }}
            sudo rm ${{ env.DEPLOY_PATH }}/release.tar.gz

            echo "Running database migrations"
            sudo -u phoenix ${DEPLOY_PATH}/bin/myapp eval "MyApp.Release.migrate"

            echo "Starting new service"
            sudo systemctl daemon-reload
            sudo systemctl start ${{ env.SERVICE_NAME }}

            echo "Checking service status"
            sudo systemctl is-active --quiet ${{ env.SERVICE_NAME }} && echo "✅ Deploy succeeded: service is active." || (echo "❌ Service failed to start!" && sudo systemctl status ${{ env.SERVICE_NAME }} --no-pager && exit 1)
        env:
          # Передаем секреты в среду исполнения скрипта
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
